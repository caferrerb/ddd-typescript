name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  build-test-release:
    runs-on: ubuntu-latest

    steps:
      - name: üìÖ Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üö± Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org/'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üö∞ Build
        run: npm run build

      - name: ‚úÖ Test
        run: npm test

      - name: üìü Version packages if changeset exists
        id: version_step
        run: |
          if [ -n "$(ls .changeset/*.md 2>/dev/null)" ]; then
            echo "Running changeset version..."
            npx changeset version
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add .
            git commit -m "ci: version bump"
            VERSION=$(node -p "require('./package.json').version")
            git tag "v$VERSION"
            git pull --rebase origin main
            git push --follow-tags
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "No changesets found"
            echo "version=" >> $GITHUB_OUTPUT
          fi

      - name: üè∑Ô∏è Create GitHub Release (official)
        if: steps.version_step.outputs.version != ''
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.version_step.outputs.version }}
          release_name: Release v${{ steps.version_step.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
